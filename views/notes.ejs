<!DOCTYPE html>
<html lang="en">
  <head>
    <title>Notes</title>
    <!-- Required meta tags -->
    <meta charset="utf-8" />
    <meta
      name="viewport"
      content="width=device-width, initial-scale=1, shrink-to-fit=no"
    />
    <!-- Bootstrap CSS -->
    <link
      rel="stylesheet"
      href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css"
      integrity="sha384-ggOyR0iXCbMQv3Xipma34MD+dH/1fQ784/j6cY/iJTQUOhcWr7x9JvoRxT2MZw1T"
      crossorigin="anonymous"
    />
    <style>
      body {
        background-color: #dddddd;
      }
      textarea:focus,
      input:focus {
        outline: none;
      }
      .logo {
        width: 150px;
      }
      .dot {
        width: 3px;
        height: 3px;
        margin: 5px;
        background: #424344;
        border-radius: 50%;
      }
      .menu-section {
        cursor: pointer;
      }
      textarea {
        overflow: hidden;
        resize: none;
        display: block;
      }
      .cstm-notes {
        border-radius: 10px;
      }
      .btn:focus,
      .btn:active {
        outline: none !important;
        box-shadow: none;
      }
      @media (max-width: 575px) {
        .for-notes {
          margin: 0px 10%;
        }
      }
    </style>
  </head>
  <body>
    <nav
      class="navbar navbar-expand-sm navbar-light bg-light border-bottom px-sm-5 px-4"
    >
      <a class="navbar-brand px-0 px-sm-5" href="#"
        ><img class="img-fluid logo" src="/icons/notes_logo.svg"
      /></a>
      <button
        class="navbar-toggler d-lg-none"
        type="button"
        data-toggle="collapse"
        data-target="#collapsibleNavId"
        aria-controls="collapsibleNavId"
        aria-expanded="false"
        aria-label="Toggle navigation"
      >
        <span class="navbar-toggler-icon"></span>
      </button>
      <div
        class="collapse navbar-collapse justify-content-end ml-5 ml-sm-0"
        id="collapsibleNavId"
      ></div>
    </nav>
    <div class="container">
      <div class="row for-notes">
        <div
          class="card card-body col-sm-9 col-md-9 col-lg-4 mx-auto cstm-notes shadow mt-4"
          id="create-notes"
        >
          <input
            type="text"
            id="title"
            placeholder="Title"
            class="border-0 p-2"
            autocomplete="off"
          />
          <textarea
            id="notes"
            cols="30"
            rows="1"
            placeholder="Take a Note...."
            class="border-0 p-2"
          ></textarea>
          <span class="d-flex justify-content-end">
            <button class="btn border-0 text-secondary" id="cancel">
              Cancel
            </button>
            <button class="btn border-0 text-secondary" id="save">
              Save
            </button>
          </span>
        </div>
        <div
          id="edit-notes"
          class="card card-body col-sm-9 col-md-9 col-lg-4 mx-auto cstm-notes shadow mt-4 d-none"
        >
          <input
            type="text"
            id="update-title"
            placeholder="Title"
            class="border-0 p-2"
            autocomplete="off"
          />
          <textarea
            id="update-notes"
            cols="30"
            rows="1"
            placeholder="Take a Note...."
            class="border-0 p-2"
          ></textarea>
          <span class="d-flex justify-content-end">
            <button class="btn border-0 text-secondary" id="cancel-update">
              Cancel
            </button>
            <button class="btn border-0 text-secondary" id="update">
              Save
            </button>
          </span>
        </div>
      </div>
      <div class="row my-5">
        <div class="card-columns mx-auto w-75" id="notes-section"></div>
      </div>
    </div>

    <!-- Optional JavaScript -->
    <!-- jQuery first, then Popper.js, then Bootstrap JS -->
    <script
      src="https://code.jquery.com/jquery-3.3.1.slim.min.js"
      integrity="sha384-q8i/X+965DzO0rT7abK41JStQIAqVgRVzpbzo5smXKp4YfRvH+8abtTE1Pi6jizo"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/1.14.7/umd/popper.min.js"
      integrity="sha384-UO2eT0CpHqdSJQ6hJty5KVphtPhzWj9WO1clHTMGa3JDZwrnQq4sF86dIHNDz0W1"
      crossorigin="anonymous"
    ></script>
    <script
      src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"
      integrity="sha384-JjSmVgyd0p3pXB1rRibZUAYoIIy6OrQ6VrjIEaFf/nJGzIxFDsf4x0xIM+B07jRM"
      crossorigin="anonymous"
    ></script>
    <script src="/js/phoenix.js"></script>
    <script>
      var NoteScreen = {
        socket: new Phoenix.Socket("wss://sphxchat.herokuapp.com/socket", {
          params: { token: window.userToken },
        }),
        // socket: new Phoenix.Socket("ws://localhost:4000/socket", {
        //   params: { token: window.userToken },
        // }),
        room: `<%= room_id%>`,
        title: document.getElementById("title"),
        notes: document.getElementById("notes"),
        edit_title: document.getElementById("update-title"),
        edit_notes: document.getElementById("update-notes"),
        save: document.getElementById("save"),
        update: document.getElementById("update"),
        cancel: document.getElementById("cancel"),
        cancel_form: document.getElementById("cancel-update"),
        edit_form: document.getElementById("edit-notes"),
        create_form: document.getElementById("create-notes"),
        addNotes: function (data) {
          var element_data;
          element_data = `<div id="${data.id}" class="card card-body shadow-sm cstm-notes my-2">`;
          element_data += `<div class="d-flex justify-content-between">`;
          element_data += `<div><h4 class="card-title">${data.name}</h4>`;
          element_data += `<p class="card-text" style="white-space:pre-wrap">${data.notes}</p>`;
          element_data += `</div><div class="dropdown">`;
          element_data += `<div class="menu-section " id="notesMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">`;
          element_data += `<div class="dot"></div>`.repeat(3) + `</div>`;
          element_data += `<div class="dropdown-menu" aria-labelledby="notesMenu">`;
          // element_data += `<a class="dropdown-item pin" href="#" >Pin</a>`;
          element_data += `<a class="dropdown-item edit" href="#" data-content='${JSON.stringify(
            data
          )}'>Edit</a>`;
          element_data += `<a class="dropdown-item delete"  href="#" data-content="${data.id}">Delete</a>`;
          element_data += `</div>`.repeat(2);

          $("#notes-section").append(element_data);
        },
        editNotes: function (event) {
          NoteScreen.create_form.classList.add("d-none");
          var data = JSON.parse($(this).attr("data-content"));
          NoteScreen.tmp_notes = data;
          $(`#${data.id}`).hide();
          NoteScreen.edit_title.value = data.name;
          NoteScreen.edit_notes.value = data.notes;
          NoteScreen.edit_form.classList.remove("d-none");
          NoteScreen.autosize(NoteScreen.edit_notes);
        },
        updateNotes: function (data) {
          $(`#${data.id}`).find(".card-title").val(data.name);
          $(`#${data.id}`).find(".card-text").text(data.notes);
          $(`#${data.id}`)
            .find(".edit")
            .attr("data-content", JSON.stringify(data));
          // NoteScreen.tmp_notes = null;
        },
        deleteNotes: function () {
          var id = $(this).attr("data-content");
          NoteScreen.channel.push("deletenotes", {
            id: parseInt(id),
          });
        },
        onDeleteNotes: function (data) {
          $(`#${data.id}`).remove();
        },
        autosize: function (element) {
          setTimeout(function () {
            element.style.cssText = "height:auto; padding:0";
            element.style.cssText = "height:" + element.scrollHeight + "px";
          }, 0);
        },
      };
      NoteScreen.save.addEventListener(
        "click",
        function () {
          if (NoteScreen.notes.value.replace(/\s+/g, "").length > 0) {
            NoteScreen.channel.push("notes", {
              // send the message to the server on "shout" channel
              notes: NoteScreen.notes.value, // get message text (value) from msg input field.
              room: NoteScreen.room,
              name: NoteScreen.title.value || "no-title",
            });
          }
          NoteScreen.title.value = "";
          NoteScreen.notes.value = "";
          NoteScreen.autosize(NoteScreen.notes);
        },
        false
      );
      NoteScreen.update.addEventListener(
        "click",
        function () {
          if (NoteScreen.edit_notes.value.replace(/\s+/g, "").length > 0) {
            NoteScreen.channel.push("editnotes", {
              // send the message to the server on "shout" channel
              notes: NoteScreen.edit_notes.value, // get message text (value) from msg input field.
              name: NoteScreen.edit_title.value || "no-title",
              id: NoteScreen.tmp_notes.id,
            });
          }
          NoteScreen.edit_title.value = "";
          NoteScreen.edit_notes.value = "";
          NoteScreen.autosize(NoteScreen.edit_notes);
          NoteScreen.edit_form.classList.add("d-none");
          NoteScreen.create_form.classList.remove("d-none");
          $(`#${NoteScreen.tmp_notes.id}`).show();
        },
        false
      );
      NoteScreen.cancel.addEventListener(
        "click",
        function () {
          NoteScreen.title.value = "";
          NoteScreen.notes.value = "";
          NoteScreen.autosize(NoteScreen.notes);
        },
        false
      );
      NoteScreen.cancel_form.addEventListener(
        "click",
        function () {
          NoteScreen.edit_title.value = "";
          NoteScreen.edit_notes.value = "";
          NoteScreen.autosize(NoteScreen.edit_notes);
          NoteScreen.edit_form.classList.add("d-none");
          NoteScreen.create_form.classList.remove("d-none");
          $(`#${NoteScreen.tmp_notes.id}`).show();
        },
        false
      );

      NoteScreen.socket.connect();
      NoteScreen.channel = NoteScreen.socket.channel(
        "room:" + NoteScreen.room,
        {}
      );
      NoteScreen.channel.on("notes", NoteScreen.addNotes);
      NoteScreen.channel.on("editnotes", NoteScreen.updateNotes);
      NoteScreen.channel.on("deletenotes", NoteScreen.onDeleteNotes);
      NoteScreen.channel.join().receive("ok", (resp) => {
        console.log("Joined successfully", resp);
      });

      $(document).on("click", ".edit", NoteScreen.editNotes);
      $(document).on("click", ".delete", NoteScreen.deleteNotes);
      $(document).on("keydown", "#notes", function () {
        NoteScreen.autosize(this);
      });
      $(document).on("keydown", "#update-notes", function () {
        NoteScreen.autosize(this);
      });
    </script>
  </body>
</html>
